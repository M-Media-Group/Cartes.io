(self.webpackChunksite=self.webpackChunksite||[]).push([[798],{7284:(e,a,t)=>{"use strict";t.d(a,{Z:()=>l});var n=t(4015),r=t.n(n),s=t(3645),i=t.n(s)()(r());i.push([e.id,"#formControlRange{direction:rtl}","",{version:3,sources:["webpack://./resources/js/components/MapContainerComponent.vue"],names:[],mappings:"AA0QA,kBACA,aACA",sourcesContent:['<template>\n    <div>\n        <map-component v-if="map" :map_id="map.uuid" :map_token="map_token" style="height: 65vh;" :users_can_create_markers="map.users_can_create_markers" :map_categories="categories" :initial_markers="activeMarkers" v-on:marker-create="handleMarkerCreate" v-on:marker-delete="handleMarkerDelete" :user="user"></map-component>\n        <div v-else style="height: 65vh;" class="row align-items-center bg-dark">\n            <div class="col text-center">\n                <div>Cartes.io</div>\n                <p class="text-muted mb-0">Contacting planet Earth...</p>\n            </div>\n        </div>\n        <div class="container">\n            <div class="row justify-content-center mt-5">\n                <div class="col-md-12" style="max-width: 950px;">\n                    <map-details-component :map_id="map.uuid" :map_token="map_token" :map="map" v-on:map-update="handleMapUpdate">\n                        <map-markers-feed-component v-if="hasLiveData" :markers="activeMarkers"></map-markers-feed-component>\n                        <div class="card bg-dark text-white mb-3">\n                            <div class="card-header" data-toggle="collapse" data-target="#displayCollapse" aria-expanded="false" aria-controls="displayCollapse" style="cursor: pointer;"><i class="fa fa-sliders"></i> Map display options</div>\n                            <div class="card-body collapse" id="displayCollapse">\n                                <div class="form-group row" v-if="!map_settings.show_all">\n                                    <label class="col-md-12 col-form-label" for="formControlRange">Time slider\n                                        <small v-if="map_settings.mapSelectedAge > 0">(showing map as of {{map_settings.mapSelectedAge}} minutes ago)</small>\n                                        <small v-else>(showing live map)</small>\n                                    </label>\n                                    <div class="col-md-12">\n                                        <input type="range" class="form-control-range w-100" id="formControlRange" :max="mapAgeInMinutes" step="5" min="0" v-model="map_settings.mapSelectedAge">\n                                    </div>\n                                </div>\n                                <div class="form-group row">\n                                    <label class="col-md-12 col-form-label">Visible markers</label>\n                                    <div class="col-md-12">\n                                        <div class="form-check">\n                                            <input type="checkbox" id="show_all_checkbox" v-model="map_settings.show_all">\n                                            <label class="form-check-label" for="show_all_checkbox">\n                                                Show all markers\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \x3c!--                         <api-data-transformer-component v-on:markers-updated="handleApiMarkers"></api-data-transformer-component>\n --\x3e\n                    </map-details-component>\n                    <h2 class="mt-5" v-if="nonSpamMarkers && nonSpamMarkers.length > 0">Map stats</h2>\n                    <div class="row" v-if="nonSpamMarkers && nonSpamMarkers.length > 0">\n                        <div class="col-md-6">\n                            <h3>Total markers</h3>\n                            <div class="jumbotron jumbotron-fluid bg-dark rounded">\n                                <div class="container">\n                                    <div class="display-4 text-center">{{nonSpamMarkers.length}}</div>\n                                    <p class="lead text-center">All the markers created.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-6">\n                            <h3>Active markers</h3>\n                            <div class="jumbotron jumbotron-fluid bg-dark rounded">\n                                <div class="container">\n                                    <div class="display-4 text-center">{{nonSpamMarkers.length - expiredMarkers.length}}</div>\n                                    <p class="lead text-center">Markers that are currently live.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <map-markers-chart-component v-if="nonSpamMarkers && nonSpamMarkers.length > 0" :markers="markers"></map-markers-chart-component>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    // props: [\'initial_map\', \'initial_markers\', \'initial_map_token\', \'user\'],\n\n    props: {\n        // Basic type check (`null` and `undefined` values will pass any type validation)\n        initial_map: Object,\n        // Multiple possible types\n        initial_markers: Object,\n        // Required string\n        initial_map_token: {\n          type: String,\n          required: false\n        },\n        // Object with a default value\n        user: {\n          type: Object,\n          // Object or array defaults must be returned from\n          // a factory function\n          default: function () {\n            return { }\n          }\n        }\n      },\n\n    components: {},\n\n    data() {\n        return {\n            map: this.initial_map,\n            map_token: this.initial_map_token,\n            markers: this.initial_markers,\n            map_settings: {\n                show_all: false,\n                mapSelectedAge: 0,\n            },\n        }\n    },\n\n    created() {\n        if (!this.markers) {\n            this.getAllMarkers()\n        }\n        this.listenForNewMarkers()\n        this.listenForDeletedMarkers()\n    },\n\n    mounted() {\n\n    },\n\n    computed: {\n        mapAgeInMinutes() {\n            if (!this.map) {\n                return false;\n            }\n            return Math.abs(Vue.moment().diff(this.map.created_at, \'minutes\'))\n        },\n        nonSpamMarkers() {\n            if (!this.markers) {\n                return []\n            }\n            return this.markers.filter(function(marker) {\n                if(marker.is_spam && !localStorage[\'post_\' + marker.id]){\n                    return false\n                }\n                return true\n            })\n        },\n        activeMarkers() {\n            if (!this.markers) {\n                return []\n            } else if (this.map_settings.show_all) {\n                return this.nonSpamMarkers\n            }\n\n            let diff_date_time = Vue.moment().subtract(this.map_settings.mapSelectedAge, \'minutes\');\n\n            return this.nonSpamMarkers.filter(function(marker) {\n\n                if (Vue.moment(marker.created_at).isSameOrBefore(diff_date_time, \'minute\') && (marker.expires_at == null || Vue.moment(diff_date_time).isBefore(marker.expires_at))) {\n                    return true\n                }\n                return false\n            })\n        },\n        expiredMarkers() {\n            if (!this.nonSpamMarkers) {\n                return []\n            }\n            return this.nonSpamMarkers.filter(function(marker) {\n                if (!marker.expires_at) {\n                    return false\n                }\n                return Vue.moment().isAfter(Vue.moment(marker.expires_at))\n                //return new Date() > new Date(Date.parse(marker.expires_at.replace(/-/g, \'/\')))\n            })\n        },\n        hasLiveData() {\n            if (!this.map) {\n                return false\n            }\n            if (this.map.users_can_create_markers === \'no\') {\n                return false\n            }\n            if (this.markers < 1) {\n                return false\n            }\n            return true\n        },\n        categories() {\n            if (!this.markers) {\n                return []\n            }\n            var map1 = this.markers.map(x => x.category);\n            return map1.map(e => e.id)\n                // store the indexes of the unique objects\n                .map((e, i, final) => final.indexOf(e) === i && i)\n                // eliminate the false indexes & return unique objects\n                .filter((e) => map1[e]).map(e => map1[e]);\n        }\n    },\n\n    watch: {\n\n    },\n\n    methods: {\n        groupBy(list, keyGetter) {\n            const map = new Map();\n            list.forEach((item) => {\n                const key = keyGetter(item);\n                const collection = map.get(key);\n                if (!collection) {\n                    map.set(key, [item]);\n                } else {\n                    collection.push(item);\n                }\n            });\n            return map;\n        },\n\n        getAllMarkers() {\n            axios\n                .get(\'/api/maps/\' + this.map.uuid + \'/markers?show_expired=true\')\n                .then(response => (\n                    this.markers = response.data\n                ))\n        },\n\n        listenForNewMarkers() {\n            Echo.channel(\'maps.\' + this.map.uuid).listen(\'MarkerCreated\', (e) => {\n                // this.$notify("A new marker was just added")\n                this.$notify({\n                        type: \'success\',\n                        title: \'"\'+e.marker.category.name+\'" marker was just added\',\n                        text: e.marker.description\n                      })\n                this.handleMarkerCreate(e.marker);\n            });\n        },\n\n        listenForDeletedMarkers() {\n            Echo.channel(\'maps.\' + this.map.uuid).listen(\'MarkerDeleted\', (e) => {\n                this.handleMarkerDelete(e.marker.id);\n            });\n        },\n\n        handleMarkerCreate(marker) {\n            this.markers.push(marker);\n        },\n\n        handleMarkerDelete(id) {\n            this.$notify("A marker was just deleted");\n            this.markers = this.markers.filter((e) => e.id !== id);\n        },\n\n        handleMapUpdate(map) {\n            this.$notify("Information about this map has been updated")\n            this.map = map\n        },\n\n        handleApiMarkers(markers) {\n            this.markers = markers\n        },\n        markerInLocalStorageKey(id) {\n            if (localStorage[\'post_\' + id]) {\n                return true\n            }\n            return false\n        }\n\n    }\n}\n\n<\/script>\n<style>\n#formControlRange {\n    direction: rtl\n}\n\n</style>\n'],sourceRoot:""}]);const l=i},6798:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>o});const n={props:{initial_map:Object,initial_markers:Object,initial_map_token:{type:String,required:!1},user:{type:Object,default:function(){return{}}}},components:{},data:function(){return{map:this.initial_map,map_token:this.initial_map_token,markers:this.initial_markers,map_settings:{show_all:!1,mapSelectedAge:0}}},created:function(){this.markers||this.getAllMarkers(),this.listenForNewMarkers(),this.listenForDeletedMarkers()},mounted:function(){},computed:{mapAgeInMinutes:function(){return!!this.map&&Math.abs(Vue.moment().diff(this.map.created_at,"minutes"))},nonSpamMarkers:function(){return this.markers?this.markers.filter((function(e){return!(e.is_spam&&!localStorage["post_"+e.id])})):[]},activeMarkers:function(){if(!this.markers)return[];if(this.map_settings.show_all)return this.nonSpamMarkers;var e=Vue.moment().subtract(this.map_settings.mapSelectedAge,"minutes");return this.nonSpamMarkers.filter((function(a){return!(!Vue.moment(a.created_at).isSameOrBefore(e,"minute")||null!=a.expires_at&&!Vue.moment(e).isBefore(a.expires_at))}))},expiredMarkers:function(){return this.nonSpamMarkers?this.nonSpamMarkers.filter((function(e){return!!e.expires_at&&Vue.moment().isAfter(Vue.moment(e.expires_at))})):[]},hasLiveData:function(){return!!this.map&&("no"!==this.map.users_can_create_markers&&!(this.markers<1))},categories:function(){if(!this.markers)return[];var e=this.markers.map((function(e){return e.category}));return e.map((function(e){return e.id})).map((function(e,a,t){return t.indexOf(e)===a&&a})).filter((function(a){return e[a]})).map((function(a){return e[a]}))}},watch:{},methods:{groupBy:function(e,a){var t=new Map;return e.forEach((function(e){var n=a(e),r=t.get(n);r?r.push(e):t.set(n,[e])})),t},getAllMarkers:function(){var e=this;axios.get("/api/maps/"+this.map.uuid+"/markers?show_expired=true").then((function(a){return e.markers=a.data}))},listenForNewMarkers:function(){var e=this;Echo.channel("maps."+this.map.uuid).listen("MarkerCreated",(function(a){e.$notify({type:"success",title:'"'+a.marker.category.name+'" marker was just added',text:a.marker.description}),e.handleMarkerCreate(a.marker)}))},listenForDeletedMarkers:function(){var e=this;Echo.channel("maps."+this.map.uuid).listen("MarkerDeleted",(function(a){e.handleMarkerDelete(a.marker.id)}))},handleMarkerCreate:function(e){this.markers.push(e)},handleMarkerDelete:function(e){this.$notify("A marker was just deleted"),this.markers=this.markers.filter((function(a){return a.id!==e}))},handleMapUpdate:function(e){this.$notify("Information about this map has been updated"),this.map=e},handleApiMarkers:function(e){this.markers=e},markerInLocalStorageKey:function(e){return!!localStorage["post_"+e]}}};var r=t(3379),s=t.n(r),i=t(7284),l={insert:"head",singleton:!1};s()(i.Z,l);i.Z.locals;const o=(0,t(1900).Z)(n,(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",[e.map?t("map-component",{staticStyle:{height:"65vh"},attrs:{map_id:e.map.uuid,map_token:e.map_token,users_can_create_markers:e.map.users_can_create_markers,map_categories:e.categories,initial_markers:e.activeMarkers,user:e.user},on:{"marker-create":e.handleMarkerCreate,"marker-delete":e.handleMarkerDelete}}):t("div",{staticClass:"row align-items-center bg-dark",staticStyle:{height:"65vh"}},[t("div",{staticClass:"col text-center"},[t("div",[e._v("Cartes.io")]),e._v(" "),t("p",{staticClass:"text-muted mb-0"},[e._v("Contacting planet Earth...")])])]),e._v(" "),t("div",{staticClass:"container"},[t("div",{staticClass:"row justify-content-center mt-5"},[t("div",{staticClass:"col-md-12",staticStyle:{"max-width":"950px"}},[t("map-details-component",{attrs:{map_id:e.map.uuid,map_token:e.map_token,map:e.map},on:{"map-update":e.handleMapUpdate}},[e.hasLiveData?t("map-markers-feed-component",{attrs:{markers:e.activeMarkers}}):e._e(),e._v(" "),t("div",{staticClass:"card bg-dark text-white mb-3"},[t("div",{staticClass:"card-header",staticStyle:{cursor:"pointer"},attrs:{"data-toggle":"collapse","data-target":"#displayCollapse","aria-expanded":"false","aria-controls":"displayCollapse"}},[t("i",{staticClass:"fa fa-sliders"}),e._v(" Map display options")]),e._v(" "),t("div",{staticClass:"card-body collapse",attrs:{id:"displayCollapse"}},[e.map_settings.show_all?e._e():t("div",{staticClass:"form-group row"},[t("label",{staticClass:"col-md-12 col-form-label",attrs:{for:"formControlRange"}},[e._v("Time slider\n                                       "),e.map_settings.mapSelectedAge>0?t("small",[e._v("(showing map as of "+e._s(e.map_settings.mapSelectedAge)+" minutes ago)")]):t("small",[e._v("(showing live map)")])]),e._v(" "),t("div",{staticClass:"col-md-12"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.map_settings.mapSelectedAge,expression:"map_settings.mapSelectedAge"}],staticClass:"form-control-range w-100",attrs:{type:"range",id:"formControlRange",max:e.mapAgeInMinutes,step:"5",min:"0"},domProps:{value:e.map_settings.mapSelectedAge},on:{__r:function(a){return e.$set(e.map_settings,"mapSelectedAge",a.target.value)}}})])]),e._v(" "),t("div",{staticClass:"form-group row"},[t("label",{staticClass:"col-md-12 col-form-label"},[e._v("Visible markers")]),e._v(" "),t("div",{staticClass:"col-md-12"},[t("div",{staticClass:"form-check"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.map_settings.show_all,expression:"map_settings.show_all"}],attrs:{type:"checkbox",id:"show_all_checkbox"},domProps:{checked:Array.isArray(e.map_settings.show_all)?e._i(e.map_settings.show_all,null)>-1:e.map_settings.show_all},on:{change:function(a){var t=e.map_settings.show_all,n=a.target,r=!!n.checked;if(Array.isArray(t)){var s=e._i(t,null);n.checked?s<0&&e.$set(e.map_settings,"show_all",t.concat([null])):s>-1&&e.$set(e.map_settings,"show_all",t.slice(0,s).concat(t.slice(s+1)))}else e.$set(e.map_settings,"show_all",r)}}}),e._v(" "),t("label",{staticClass:"form-check-label",attrs:{for:"show_all_checkbox"}},[e._v("\n                                               Show all markers\n                                           ")])])])])])])],1),e._v(" "),e.nonSpamMarkers&&e.nonSpamMarkers.length>0?t("h2",{staticClass:"mt-5"},[e._v("Map stats")]):e._e(),e._v(" "),e.nonSpamMarkers&&e.nonSpamMarkers.length>0?t("div",{staticClass:"row"},[t("div",{staticClass:"col-md-6"},[t("h3",[e._v("Total markers")]),e._v(" "),t("div",{staticClass:"jumbotron jumbotron-fluid bg-dark rounded"},[t("div",{staticClass:"container"},[t("div",{staticClass:"display-4 text-center"},[e._v(e._s(e.nonSpamMarkers.length))]),e._v(" "),t("p",{staticClass:"lead text-center"},[e._v("All the markers created.")])])])]),e._v(" "),t("div",{staticClass:"col-md-6"},[t("h3",[e._v("Active markers")]),e._v(" "),t("div",{staticClass:"jumbotron jumbotron-fluid bg-dark rounded"},[t("div",{staticClass:"container"},[t("div",{staticClass:"display-4 text-center"},[e._v(e._s(e.nonSpamMarkers.length-e.expiredMarkers.length))]),e._v(" "),t("p",{staticClass:"lead text-center"},[e._v("Markers that are currently live.")])])])])]):e._e(),e._v(" "),e.nonSpamMarkers&&e.nonSpamMarkers.length>0?t("map-markers-chart-component",{attrs:{markers:e.markers}}):e._e()],1)])])],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=798.js.map