(self.webpackChunksite=self.webpackChunksite||[]).push([[237],{3995:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var a=n(4015),s=n.n(a),i=n(3645),r=n.n(i)()(s());r.push([e.id,"#formControlRange{direction:rtl}.slide-enter-active,.slide-leave-active{transition:transform .2s ease}.slide-enter,.slide-leave-to{transform:translateX(-100%);transition:all .15s ease-in 0s}","",{version:3,sources:["webpack://./resources/js/components/PublicMapContainerComponent.vue"],names:[],mappings:"AAgSA,kBACA,aACA,CACA,wCAGA,6BACA,CAEA,6BAEA,2BAAA,CACA,8BACA",sourcesContent:['<template>\n    <div>\n        <transition name="slide">\n            <div key="menu" style="position: fixed; left:1.5rem;bottom:3rem;z-index: 1000;" v-if="menu_hidden">\n                <div class="btn btn-primary" @click="setMenuVisibility(true)">Show all maps</div>\n                <a :href="/maps/+map.uuid" class="btn btn-secondary">Open map page</a>\n            </div>\n            <div v-else key="menu_button" class="p-0" style="height: 100vh;position: fixed; left:0;top:0;z-index: 1001; min-width: 18rem;max-width:27rem;background-color: var(--white);">\n                <ul id="marker_feed" class="list-unstyled px-0 pb-3 bg-transparent card">\n                    <li class="media p-3 card-header" style="cursor: pointer;display:block;">\n                        <div class="media-body" style="display:flex;align-items: center;justify-content: space-between;">\n                            <h5 class="mt-0 mb-0">Maps on Cartes.io</h5>\n                            <a href="javascript:void(0)" class="btn btn-sm text-white" @click="setMenuVisibility(0)">X</a>\n                        </div>\n                        <div class="mt-3" style="display:flex;align-items: center;justify-content: space-between;">\n                            <a class="btn btn-sm" href="#" @click="setMapSelector(\'user\')" v-bind:class="[map_selector == \'user\' ? \'btn-primary\' : \'btn-dark\']">Your maps</a>\n                            <a class="btn btn-sm" href="#" @click="setMapSelector(\'public\')" v-bind:class="[map_selector == \'public\' ? \'btn-primary\' : \'btn-dark\']">Public maps</a>\n                        </div>\n                    </li>\n                    <div id="marker_feed_markers" class="collapse show" style="max-height:83vh; overflow-y: scroll;">\n                        <template v-if="activeMaps.length > 0">\n                            <li class="media ml-3 mr-3 p-3 mb-3 card" v-for="single_map, index in activeMaps" :key="\'map_id_\'+single_map.uuid" @click="setMap(index)" v-bind:class="[map && single_map.uuid == map.uuid ? \'bg-white text-dark\' : \'bg-secondary text-white feed-element\']">\n                                <div class="media-body">\n                                    <h5 class="mt-0 mb-1">{{single_map.title || "Untitled map"}}</h5>\n                                    <div v-if="map && single_map.uuid == map.uuid">\n                                        <p>{{ single_map.description }}</p>\n                                        <a :href="/maps/+map.uuid" class="btn btn-primary btn-block w-100">Open map page</a>\n                                    </div>\n                                </div>\n                            </li>\n                            <li class="media ml-3 mr-3 p-3 mb-3">\n                                <div class="media-body">\n                                        <button type="submit" class="btn btn-primary mt-3 mb-5 w-100" form="new_map_form">\n                                            Create a map\n                                        </button>\n                                </div>\n                            </li>\n                        </template>\n                        <template v-else>\n                            <div class="text-center text-muted p-3">There\'s no maps to show.</div>\n                            <li class="media ml-3 mr-3 p-3 mb-3">\n                                <div class="media-body">\n                                        <button type="submit" class="btn btn-primary mt-3 mb-5 w-100" form="new_map_form">\n                                            Create a map\n                                        </button>\n                                </div>\n                            </li>\n                        </template>\n                    </div>\n                </ul>\n            </div>\n        </transition>\n        <div class="col-12 p-0" @touchstart="setMenuVisibility(0)" @mousedown="setMenuVisibility(0)">\n            <map-component v-if="map" :map_id="map.uuid" :map_token="null" style="height: 100vh;" :users_can_create_markers="map.users_can_create_markers" :map_categories="categories" :initial_markers="null" v-on:marker-create="handleMarkerCreate" v-on:marker-delete="handleMarkerDelete"></map-component>\n            <div v-else style="height: 65vh;" class="row align-items-center bg-dark">\n                <div class="col text-center">\n                    <div>Cartes.io</div>\n                    <p class="text-muted mb-0">Contacting planet Earth...</p>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n<script>\nexport default {\n    props: [],\n\n    components: {},\n\n    data() {\n        return {\n            map_selector: \'public\',\n            map: null,\n            maps: [],\n            user_maps: [],\n            markers: null,\n            menu_hidden: false,\n            map_settings: {\n                show_all: true,\n                mapSelectedAge: 0,\n            },\n        }\n    },\n\n    created() {\n        this.getAllMaps()\n        // if (!this.map && !this.markers) {\n        //     //this.getAllMarkers()\n        // } else if (this.map && !this.markers) {\n        //     this.getAllMarkers()\n        //     this.listenForNewMarkers()\n        //     this.listenForDeletedMarkers()\n        // }\n\n    },\n\n    mounted() {\n        this.getUsersMaps()\n    },\n\n    computed: {\n        mapAgeInMinutes() {\n            if (!this.map) {\n                return false;\n            }\n            return Math.abs(Vue.moment().diff(this.map.created_at, \'minutes\'))\n        },\n        activeMarkers() {\n            if (!this.markers) {\n                return []\n            } else if (this.map_settings.show_all) {\n                return this.markers\n            }\n\n            let markers = this.markers\n            let diff_date_time = Vue.moment().subtract(this.map_settings.mapSelectedAge, \'minutes\');\n\n            return markers.filter(function(marker) {\n                if (Vue.moment(marker.created_at).isSameOrBefore(diff_date_time, \'minute\') && (marker.expires_at == null || Vue.moment(diff_date_time).isBefore(marker.expires_at))) {\n                    return true\n                }\n                return false\n            })\n        },\n        expiredMarkers() {\n            if (!this.markers) {\n                return []\n            }\n            return this.markers.filter(function(marker) {\n                if (!marker.expires_at) {\n                    return false\n                }\n                return Vue.moment().isAfter(Vue.moment(marker.expires_at))\n                //return new Date() > new Date(Date.parse(marker.expires_at.replace(/-/g, \'/\')))\n            })\n        },\n        hasLiveData() {\n            if (!this.map) {\n                return false\n            }\n            if (this.map.users_can_create_markers === \'no\') {\n                return false\n            }\n            if (this.markers < 1) {\n                return false\n            }\n            return true\n        },\n        categories() {\n            if (!this.markers) {\n                return []\n            }\n            var map1 = this.markers.map(x => x.category);\n            return map1.map(e => e.id)\n                // store the indexes of the unique objects\n                .map((e, i, final) => final.indexOf(e) === i && i)\n                // eliminate the false indexes & return unique objects\n                .filter((e) => map1[e]).map(e => map1[e]);\n        },\n        activeMaps() {\n            if (this.map_selector == \'user\') {\n                return this.user_maps\n            }\n            return this.maps.filter(function(single_map) {\n                return single_map.markers_count > 0 && single_map.title !== ""\n            })\n        }\n    },\n\n    watch: {\n\n    },\n\n    methods: {\n        groupBy(list, keyGetter) {\n            const map = new Map();\n            list.forEach((item) => {\n                const key = keyGetter(item);\n                const collection = map.get(key);\n                if (!collection) {\n                    map.set(key, [item]);\n                } else {\n                    collection.push(item);\n                }\n            });\n            return map;\n        },\n\n        getAllMaps() {\n            axios\n                .get(\'/api/maps\')\n                .then(response => (\n                    this.maps = response.data.data,\n                    this.setMap(0)\n                ))\n        },\n\n        getUsersMaps() {\n            var ids = []\n            Object.keys(localStorage).forEach(function(key) {\n                if (key.includes(\'map_\')) {\n                    ids.push(key.replace(\'map_\', \'\'))\n                }\n            });\n\n            if (ids.length > 0) {\n                axios\n                    .get(\'/api/maps\', {\n                        params: {\n                            ids: ids,\n                            orderBy: \'updated_at\'\n                        }\n                    })\n                    .then(response => {\n                        this.user_maps = response.data.data\n                    }\n                    )\n            }\n        },\n\n        getAllMarkers() {\n            axios\n                .get(\'/api/maps/\' + this.map.uuid + \'/markers?show_expired=true\')\n                .then(response => (\n                    this.markers = response.data\n                ))\n        },\n\n        listenForNewMarkers() {\n            Echo.channel(\'maps.\' + this.map.uuid).listen(\'MarkerCreated\', (e) => {\n                this.handleMarkerCreate(e.marker);\n            });\n        },\n\n        listenForDeletedMarkers() {\n            Echo.channel(\'maps.\' + this.map.uuid).listen(\'MarkerDeleted\', (e) => {\n                this.handleMarkerDelete(e.marker.id);\n            });\n        },\n\n        handleMarkerCreate(marker) {\n            this.markers.push(marker);\n        },\n\n        handleMarkerDelete(id) {\n            this.markers = this.markers.filter((e) => e.id !== id)\n        },\n\n        handleMapUpdate(map) {\n            this.map = map\n        },\n\n        handleApiMarkers(markers) {\n            this.markers = markers\n        },\n\n        getMap(map_uuid) {\n            axios\n                .get(\'/api/maps/\' + map_uuid )\n                .then(response => (\n                    this.map = response.data\n                ))\n            this.getAllMarkers()\n            this.listenForNewMarkers()\n            this.listenForDeletedMarkers()\n        },\n\n        setMap(index) {\n            this.map = this.activeMaps[index]\n        },\n\n        setMapSelector(value) {\n            this.map_selector = value\n        },\n\n        setMenuVisibility(value) {\n            if (value) {\n                return this.menu_hidden = false\n            }\n            return this.menu_hidden = true\n        }\n\n    }\n}\n\n<\/script>\n<style>\n#formControlRange {\n    direction: rtl\n}\n.slide-enter-active,\n.slide-leave-active\n{\n    transition: transform 0.2s ease;\n}\n\n.slide-enter,\n.slide-leave-to {\n    transform: translateX(-100%);\n    transition: all 150ms ease-in 0s;\n}\n</style>\n'],sourceRoot:""}]);const m=r},3237:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});const a={props:[],components:{},data:function(){return{map_selector:"public",map:null,maps:[],user_maps:[],markers:null,menu_hidden:!1,map_settings:{show_all:!0,mapSelectedAge:0}}},created:function(){this.getAllMaps()},mounted:function(){this.getUsersMaps()},computed:{mapAgeInMinutes:function(){return!!this.map&&Math.abs(Vue.moment().diff(this.map.created_at,"minutes"))},activeMarkers:function(){if(!this.markers)return[];if(this.map_settings.show_all)return this.markers;var e=this.markers,t=Vue.moment().subtract(this.map_settings.mapSelectedAge,"minutes");return e.filter((function(e){return!(!Vue.moment(e.created_at).isSameOrBefore(t,"minute")||null!=e.expires_at&&!Vue.moment(t).isBefore(e.expires_at))}))},expiredMarkers:function(){return this.markers?this.markers.filter((function(e){return!!e.expires_at&&Vue.moment().isAfter(Vue.moment(e.expires_at))})):[]},hasLiveData:function(){return!!this.map&&("no"!==this.map.users_can_create_markers&&!(this.markers<1))},categories:function(){if(!this.markers)return[];var e=this.markers.map((function(e){return e.category}));return e.map((function(e){return e.id})).map((function(e,t,n){return n.indexOf(e)===t&&t})).filter((function(t){return e[t]})).map((function(t){return e[t]}))},activeMaps:function(){return"user"==this.map_selector?this.user_maps:this.maps.filter((function(e){return e.markers_count>0&&""!==e.title}))}},watch:{},methods:{groupBy:function(e,t){var n=new Map;return e.forEach((function(e){var a=t(e),s=n.get(a);s?s.push(e):n.set(a,[e])})),n},getAllMaps:function(){var e=this;axios.get("/api/maps").then((function(t){return e.maps=t.data.data,e.setMap(0)}))},getUsersMaps:function(){var e=this,t=[];Object.keys(localStorage).forEach((function(e){e.includes("map_")&&t.push(e.replace("map_",""))})),t.length>0&&axios.get("/api/maps",{params:{ids:t,orderBy:"updated_at"}}).then((function(t){e.user_maps=t.data.data}))},getAllMarkers:function(){var e=this;axios.get("/api/maps/"+this.map.uuid+"/markers?show_expired=true").then((function(t){return e.markers=t.data}))},listenForNewMarkers:function(){var e=this;Echo.channel("maps."+this.map.uuid).listen("MarkerCreated",(function(t){e.handleMarkerCreate(t.marker)}))},listenForDeletedMarkers:function(){var e=this;Echo.channel("maps."+this.map.uuid).listen("MarkerDeleted",(function(t){e.handleMarkerDelete(t.marker.id)}))},handleMarkerCreate:function(e){this.markers.push(e)},handleMarkerDelete:function(e){this.markers=this.markers.filter((function(t){return t.id!==e}))},handleMapUpdate:function(e){this.map=e},handleApiMarkers:function(e){this.markers=e},getMap:function(e){var t=this;axios.get("/api/maps/"+e).then((function(e){return t.map=e.data})),this.getAllMarkers(),this.listenForNewMarkers(),this.listenForDeletedMarkers()},setMap:function(e){this.map=this.activeMaps[e]},setMapSelector:function(e){this.map_selector=e},setMenuVisibility:function(e){return this.menu_hidden=!e}}};var s=n(3379),i=n.n(s),r=n(3995),m={insert:"head",singleton:!1};i()(r.Z,m);r.Z.locals;const l=(0,n(1900).Z)(a,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("transition",{attrs:{name:"slide"}},[e.menu_hidden?n("div",{key:"menu",staticStyle:{position:"fixed",left:"1.5rem",bottom:"3rem","z-index":"1000"}},[n("div",{staticClass:"btn btn-primary",on:{click:function(t){return e.setMenuVisibility(!0)}}},[e._v("Show all maps")]),e._v(" "),n("a",{staticClass:"btn btn-secondary",attrs:{href:/maps/+e.map.uuid}},[e._v("Open map page")])]):n("div",{key:"menu_button",staticClass:"p-0",staticStyle:{height:"100vh",position:"fixed",left:"0",top:"0","z-index":"1001","min-width":"18rem","max-width":"27rem","background-color":"var(--white)"}},[n("ul",{staticClass:"list-unstyled px-0 pb-3 bg-transparent card",attrs:{id:"marker_feed"}},[n("li",{staticClass:"media p-3 card-header",staticStyle:{cursor:"pointer",display:"block"}},[n("div",{staticClass:"media-body",staticStyle:{display:"flex","align-items":"center","justify-content":"space-between"}},[n("h5",{staticClass:"mt-0 mb-0"},[e._v("Maps on Cartes.io")]),e._v(" "),n("a",{staticClass:"btn btn-sm text-white",attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.setMenuVisibility(0)}}},[e._v("X")])]),e._v(" "),n("div",{staticClass:"mt-3",staticStyle:{display:"flex","align-items":"center","justify-content":"space-between"}},[n("a",{staticClass:"btn btn-sm",class:["user"==e.map_selector?"btn-primary":"btn-dark"],attrs:{href:"#"},on:{click:function(t){return e.setMapSelector("user")}}},[e._v("Your maps")]),e._v(" "),n("a",{staticClass:"btn btn-sm",class:["public"==e.map_selector?"btn-primary":"btn-dark"],attrs:{href:"#"},on:{click:function(t){return e.setMapSelector("public")}}},[e._v("Public maps")])])]),e._v(" "),n("div",{staticClass:"collapse show",staticStyle:{"max-height":"83vh","overflow-y":"scroll"},attrs:{id:"marker_feed_markers"}},[e.activeMaps.length>0?[e._l(e.activeMaps,(function(t,a){return n("li",{key:"map_id_"+t.uuid,staticClass:"media ml-3 mr-3 p-3 mb-3 card",class:[e.map&&t.uuid==e.map.uuid?"bg-white text-dark":"bg-secondary text-white feed-element"],on:{click:function(t){return e.setMap(a)}}},[n("div",{staticClass:"media-body"},[n("h5",{staticClass:"mt-0 mb-1"},[e._v(e._s(t.title||"Untitled map"))]),e._v(" "),e.map&&t.uuid==e.map.uuid?n("div",[n("p",[e._v(e._s(t.description))]),e._v(" "),n("a",{staticClass:"btn btn-primary btn-block w-100",attrs:{href:/maps/+e.map.uuid}},[e._v("Open map page")])]):e._e()])])})),e._v(" "),n("li",{staticClass:"media ml-3 mr-3 p-3 mb-3"},[n("div",{staticClass:"media-body"},[n("button",{staticClass:"btn btn-primary mt-3 mb-5 w-100",attrs:{type:"submit",form:"new_map_form"}},[e._v("\n                                        Create a map\n                                    ")])])])]:[n("div",{staticClass:"text-center text-muted p-3"},[e._v("There's no maps to show.")]),e._v(" "),n("li",{staticClass:"media ml-3 mr-3 p-3 mb-3"},[n("div",{staticClass:"media-body"},[n("button",{staticClass:"btn btn-primary mt-3 mb-5 w-100",attrs:{type:"submit",form:"new_map_form"}},[e._v("\n                                        Create a map\n                                    ")])])])]],2)])])]),e._v(" "),n("div",{staticClass:"col-12 p-0",on:{touchstart:function(t){return e.setMenuVisibility(0)},mousedown:function(t){return e.setMenuVisibility(0)}}},[e.map?n("map-component",{staticStyle:{height:"100vh"},attrs:{map_id:e.map.uuid,map_token:null,users_can_create_markers:e.map.users_can_create_markers,map_categories:e.categories,initial_markers:null},on:{"marker-create":e.handleMarkerCreate,"marker-delete":e.handleMarkerDelete}}):n("div",{staticClass:"row align-items-center bg-dark",staticStyle:{height:"65vh"}},[n("div",{staticClass:"col text-center"},[n("div",[e._v("Cartes.io")]),e._v(" "),n("p",{staticClass:"text-muted mb-0"},[e._v("Contacting planet Earth...")])])])],1)],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=237.js.map