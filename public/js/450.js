"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[450],{2147:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(4015),s=t.n(a),i=t(3645),r=t.n(i)()(s());r.push([e.id,"#formControlRange{direction:rtl}.slide-enter-active,.slide-leave-active{transition:transform .2s ease}.slide-enter,.slide-leave-to{transform:translateX(-100%);transition:all .15s ease-in 0s}","",{version:3,sources:["webpack://./resources/js/components/PublicMapContainerComponent.vue"],names:[],mappings:"AAmZA,kBACA,aACA,CACA,wCAEA,6BACA,CAEA,6BAEA,2BAAA,CACA,8BACA",sourcesContent:['<template>\n  <div>\n    <transition name="slide">\n      <div\n        key="menu"\n        style="position: fixed; left: 1.5rem; bottom: 3rem; z-index: 1000"\n        v-if="menu_hidden"\n      >\n        <div class="btn btn-primary" @click="setMenuVisibility(true)">\n          Show all maps\n        </div>\n        <a :href="/maps/ + map.uuid" class="btn btn-secondary">Open map page</a>\n      </div>\n      <div\n        v-else\n        key="menu_button"\n        class="p-0"\n        style="\n          height: 100vh;\n          position: fixed;\n          left: 0;\n          top: 0;\n          z-index: 1001;\n          min-width: 18rem;\n          max-width: 27rem;\n          background-color: var(--white);\n        "\n      >\n        <ul\n          id="marker_feed"\n          class="list-unstyled px-0 pb-3 bg-transparent card"\n        >\n          <li\n            class="media p-3 card-header"\n            style="cursor: pointer; display: block"\n          >\n            <div\n              class="media-body"\n              style="\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n              "\n            >\n              <h5 class="mt-0 mb-0">Maps on Cartes.io</h5>\n              <a\n                href="javascript:void(0)"\n                class="btn btn-sm text-white"\n                @click="setMenuVisibility(0)"\n                >X</a\n              >\n            </div>\n            <div\n              class="mt-3"\n              style="\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n              "\n            >\n              <a\n                class="btn btn-sm"\n                href="#"\n                @click="setMapSelector(\'user\')"\n                v-bind:class="[\n                  map_selector == \'user\' ? \'btn-primary\' : \'btn-dark\',\n                ]"\n                >Your maps</a\n              >\n              <a\n                class="btn btn-sm"\n                href="#"\n                @click="setMapSelector(\'public\')"\n                v-bind:class="[\n                  map_selector == \'public\' ? \'btn-primary\' : \'btn-dark\',\n                ]"\n                >Public maps</a\n              >\n            </div>\n          </li>\n          <div\n            id="marker_feed_markers"\n            class="collapse show"\n            style="max-height: 83vh; overflow-y: scroll"\n          >\n            <template v-if="activeMaps.length > 0">\n              <li\n                class="media ml-3 mr-3 p-3 mb-3 card"\n                v-for="(single_map, index) in activeMaps"\n                :key="\'map_id_\' + single_map.uuid"\n                @click="setMap(index)"\n                v-bind:class="[\n                  map && single_map.uuid == map.uuid\n                    ? \'bg-white text-dark\'\n                    : \'bg-secondary text-white feed-element\',\n                ]"\n              >\n                <div class="media-body">\n                  <h5 class="mt-0 mb-1">\n                    {{ single_map.title || "Untitled map" }}\n                  </h5>\n                  <div v-if="map && single_map.uuid == map.uuid">\n                    <p>{{ single_map.description }}</p>\n                    <a\n                      :href="/maps/ + map.uuid"\n                      class="btn btn-primary btn-block w-100"\n                      >Open map page</a\n                    >\n                  </div>\n                </div>\n              </li>\n              <li class="media ml-3 mr-3 p-3 mb-3">\n                <div class="media-body">\n                  <button\n                    type="submit"\n                    class="btn btn-primary mt-3 mb-5 w-100"\n                    form="new_map_form"\n                  >\n                    Create a map\n                  </button>\n                </div>\n              </li>\n            </template>\n            <template v-else>\n              <div class="text-center text-muted p-3">\n                There\'s no maps to show.\n              </div>\n              <li class="media ml-3 mr-3 p-3 mb-3">\n                <div class="media-body">\n                  <button\n                    type="submit"\n                    class="btn btn-primary mt-3 mb-5 w-100"\n                    form="new_map_form"\n                  >\n                    Create a map\n                  </button>\n                </div>\n              </li>\n            </template>\n          </div>\n        </ul>\n      </div>\n    </transition>\n    <div\n      class="col-12 p-0"\n      @touchstart="setMenuVisibility(0)"\n      @mousedown="setMenuVisibility(0)"\n    >\n      <map-component\n        v-if="map"\n        :map_id="map.uuid"\n        :map_token="null"\n        style="height: 100vh"\n        :users_can_create_markers="map.users_can_create_markers"\n        :map_categories="categories"\n        :initial_markers="null"\n        v-on:marker-create="handleMarkerCreate"\n        v-on:marker-delete="handleMarkerDelete"\n        :linkOption="map.options.links"\n      ></map-component>\n      <div v-else style="height: 65vh" class="row align-items-center bg-dark">\n        <div class="col text-center">\n          <div>Cartes.io</div>\n          <p class="text-muted mb-0">Contacting planet Earth...</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang="ts">\nimport axios from "axios";\nimport Vue from "vue";\n\nexport default {\n  props: [],\n\n  components: {},\n\n  data() {\n    return {\n      map_selector: "public",\n      map: null,\n      maps: [],\n      user_maps: [],\n      markers: null,\n      menu_hidden: false,\n      map_settings: {\n        show_all: true,\n        mapSelectedAge: 0,\n      },\n    };\n  },\n\n  created() {\n    this.getAllMaps();\n    // if (!this.map && !this.markers) {\n    //     //this.getAllMarkers()\n    // } else if (this.map && !this.markers) {\n    //     this.getAllMarkers()\n    //     this.listenForNewMarkers()\n    //     this.listenForDeletedMarkers()\n    // }\n  },\n\n  mounted() {\n    this.getUsersMaps();\n  },\n\n  computed: {\n    mapAgeInMinutes() {\n      if (!this.map) {\n        return false;\n      }\n      return Math.abs(Vue.moment().diff(this.map.created_at, "minutes"));\n    },\n    activeMarkers() {\n      if (!this.markers) {\n        return [];\n      } else if (this.map_settings.show_all) {\n        return this.markers;\n      }\n\n      let markers = this.markers;\n      let diff_date_time = Vue.moment().subtract(\n        this.map_settings.mapSelectedAge,\n        "minutes"\n      );\n\n      return markers.filter(function (marker) {\n        if (\n          Vue.moment(marker.created_at).isSameOrBefore(\n            diff_date_time,\n            "minute"\n          ) &&\n          (marker.expires_at == null ||\n            Vue.moment(diff_date_time).isBefore(marker.expires_at))\n        ) {\n          return true;\n        }\n        return false;\n      });\n    },\n    expiredMarkers() {\n      if (!this.markers) {\n        return [];\n      }\n      return this.markers.filter(function (marker) {\n        if (!marker.expires_at) {\n          return false;\n        }\n        return Vue.moment().isAfter(Vue.moment(marker.expires_at));\n        //return new Date() > new Date(Date.parse(marker.expires_at.replace(/-/g, \'/\')))\n      });\n    },\n    hasLiveData() {\n      if (!this.map) {\n        return false;\n      }\n      if (this.map.users_can_create_markers === "no") {\n        return false;\n      }\n      if (this.markers < 1) {\n        return false;\n      }\n      return true;\n    },\n    categories() {\n      if (!this.markers) {\n        return [];\n      }\n      var map1 = this.markers.map((x) => x.category);\n      return (\n        map1\n          .map((e) => e.id)\n          // store the indexes of the unique objects\n          .map((e, i, final) => final.indexOf(e) === i && i)\n          // eliminate the false indexes & return unique objects\n          .filter((e) => map1[e])\n          .map((e) => map1[e])\n      );\n    },\n    activeMaps() {\n      if (this.map_selector == "user") {\n        return this.user_maps;\n      }\n      return this.maps.filter(function (single_map) {\n        return single_map.markers_count > 0 && single_map.title !== "";\n      });\n    },\n  },\n\n  watch: {},\n\n  methods: {\n    groupBy(list, keyGetter) {\n      const map = new Map();\n      list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n          map.set(key, [item]);\n        } else {\n          collection.push(item);\n        }\n      });\n      return map;\n    },\n\n    getAllMaps() {\n      axios\n        .get("/api/maps")\n        .then((response) => ((this.maps = response.data.data), this.setMap(0)));\n    },\n\n    getUsersMaps() {\n      var ids = [];\n      Object.keys(localStorage).forEach(function (key) {\n        if (key.includes("map_")) {\n          ids.push(key.replace("map_", ""));\n        }\n      });\n\n      if (ids.length > 0) {\n        axios\n          .get("/api/maps", {\n            params: {\n              ids: ids,\n              orderBy: "updated_at",\n            },\n          })\n          .then((response) => {\n            this.user_maps = response.data.data;\n          });\n      }\n    },\n\n    getAllMarkers() {\n      axios\n        .get("/api/maps/" + this.map.uuid + "/markers?show_expired=true")\n        .then((response) => (this.markers = response.data));\n    },\n\n    listenForNewMarkers() {\n      window.Echo.channel("maps." + this.map.uuid).listen(\n        "MarkerCreated",\n        (e) => {\n          this.handleMarkerCreate(e.marker);\n        }\n      );\n    },\n\n    listenForDeletedMarkers() {\n      window.Echo.channel("maps." + this.map.uuid).listen(\n        "MarkerDeleted",\n        (e) => {\n          this.handleMarkerDelete(e.marker.id);\n        }\n      );\n    },\n\n    handleMarkerCreate(marker) {\n      this.markers.push(marker);\n    },\n\n    handleMarkerDelete(id) {\n      this.markers = this.markers.filter((e) => e.id !== id);\n    },\n\n    handleMapUpdate(map) {\n      this.map = map;\n    },\n\n    handleApiMarkers(markers) {\n      this.markers = markers;\n    },\n\n    getMap(map_uuid) {\n      axios\n        .get("/api/maps/" + map_uuid)\n        .then((response) => (this.map = response.data));\n      this.getAllMarkers();\n      this.listenForNewMarkers();\n      this.listenForDeletedMarkers();\n    },\n\n    setMap(index) {\n      this.map = this.activeMaps[index];\n    },\n\n    setMapSelector(value) {\n      this.map_selector = value;\n    },\n\n    setMenuVisibility(value) {\n      if (value) {\n        return (this.menu_hidden = false);\n      }\n      return (this.menu_hidden = true);\n    },\n  },\n};\n<\/script>\n<style>\n#formControlRange {\n  direction: rtl;\n}\n.slide-enter-active,\n.slide-leave-active {\n  transition: transform 0.2s ease;\n}\n\n.slide-enter,\n.slide-leave-to {\n  transform: translateX(-100%);\n  transition: all 150ms ease-in 0s;\n}\n</style>\n'],sourceRoot:""}]);const m=r},4450:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var a=t(9669),s=t.n(a),i=t(538);const r={props:[],components:{},data:function(){return{map_selector:"public",map:null,maps:[],user_maps:[],markers:null,menu_hidden:!1,map_settings:{show_all:!0,mapSelectedAge:0}}},created:function(){this.getAllMaps()},mounted:function(){this.getUsersMaps()},computed:{mapAgeInMinutes:function(){return!!this.map&&Math.abs(i.default.moment().diff(this.map.created_at,"minutes"))},activeMarkers:function(){if(!this.markers)return[];if(this.map_settings.show_all)return this.markers;var e=this.markers,n=i.default.moment().subtract(this.map_settings.mapSelectedAge,"minutes");return e.filter((function(e){return!(!i.default.moment(e.created_at).isSameOrBefore(n,"minute")||null!=e.expires_at&&!i.default.moment(n).isBefore(e.expires_at))}))},expiredMarkers:function(){return this.markers?this.markers.filter((function(e){return!!e.expires_at&&i.default.moment().isAfter(i.default.moment(e.expires_at))})):[]},hasLiveData:function(){return!!this.map&&("no"!==this.map.users_can_create_markers&&!(this.markers<1))},categories:function(){if(!this.markers)return[];var e=this.markers.map((function(e){return e.category}));return e.map((function(e){return e.id})).map((function(e,n,t){return t.indexOf(e)===n&&n})).filter((function(n){return e[n]})).map((function(n){return e[n]}))},activeMaps:function(){return"user"==this.map_selector?this.user_maps:this.maps.filter((function(e){return e.markers_count>0&&""!==e.title}))}},watch:{},methods:{groupBy:function(e,n){var t=new Map;return e.forEach((function(e){var a=n(e),s=t.get(a);s?s.push(e):t.set(a,[e])})),t},getAllMaps:function(){var e=this;s().get("/api/maps").then((function(n){return e.maps=n.data.data,e.setMap(0)}))},getUsersMaps:function(){var e=this,n=[];Object.keys(localStorage).forEach((function(e){e.includes("map_")&&n.push(e.replace("map_",""))})),n.length>0&&s().get("/api/maps",{params:{ids:n,orderBy:"updated_at"}}).then((function(n){e.user_maps=n.data.data}))},getAllMarkers:function(){var e=this;s().get("/api/maps/"+this.map.uuid+"/markers?show_expired=true").then((function(n){return e.markers=n.data}))},listenForNewMarkers:function(){var e=this;window.Echo.channel("maps."+this.map.uuid).listen("MarkerCreated",(function(n){e.handleMarkerCreate(n.marker)}))},listenForDeletedMarkers:function(){var e=this;window.Echo.channel("maps."+this.map.uuid).listen("MarkerDeleted",(function(n){e.handleMarkerDelete(n.marker.id)}))},handleMarkerCreate:function(e){this.markers.push(e)},handleMarkerDelete:function(e){this.markers=this.markers.filter((function(n){return n.id!==e}))},handleMapUpdate:function(e){this.map=e},handleApiMarkers:function(e){this.markers=e},getMap:function(e){var n=this;s().get("/api/maps/"+e).then((function(e){return n.map=e.data})),this.getAllMarkers(),this.listenForNewMarkers(),this.listenForDeletedMarkers()},setMap:function(e){this.map=this.activeMaps[e]},setMapSelector:function(e){this.map_selector=e},setMenuVisibility:function(e){return this.menu_hidden=!e}}};var m=t(3379),l=t.n(m),p=t(2147),o={insert:"head",singleton:!1};l()(p.Z,o);p.Z.locals;const c=(0,t(1900).Z)(r,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("transition",{attrs:{name:"slide"}},[e.menu_hidden?t("div",{key:"menu",staticStyle:{position:"fixed",left:"1.5rem",bottom:"3rem","z-index":"1000"}},[t("div",{staticClass:"btn btn-primary",on:{click:function(n){return e.setMenuVisibility(!0)}}},[e._v("\n        Show all maps\n      ")]),e._v(" "),t("a",{staticClass:"btn btn-secondary",attrs:{href:/maps/+e.map.uuid}},[e._v("Open map page")])]):t("div",{key:"menu_button",staticClass:"p-0",staticStyle:{height:"100vh",position:"fixed",left:"0",top:"0","z-index":"1001","min-width":"18rem","max-width":"27rem","background-color":"var(--white)"}},[t("ul",{staticClass:"list-unstyled px-0 pb-3 bg-transparent card",attrs:{id:"marker_feed"}},[t("li",{staticClass:"media p-3 card-header",staticStyle:{cursor:"pointer",display:"block"}},[t("div",{staticClass:"media-body",staticStyle:{display:"flex","align-items":"center","justify-content":"space-between"}},[t("h5",{staticClass:"mt-0 mb-0"},[e._v("Maps on Cartes.io")]),e._v(" "),t("a",{staticClass:"btn btn-sm text-white",attrs:{href:"javascript:void(0)"},on:{click:function(n){return e.setMenuVisibility(0)}}},[e._v("X")])]),e._v(" "),t("div",{staticClass:"mt-3",staticStyle:{display:"flex","align-items":"center","justify-content":"space-between"}},[t("a",{staticClass:"btn btn-sm",class:["user"==e.map_selector?"btn-primary":"btn-dark"],attrs:{href:"#"},on:{click:function(n){return e.setMapSelector("user")}}},[e._v("Your maps")]),e._v(" "),t("a",{staticClass:"btn btn-sm",class:["public"==e.map_selector?"btn-primary":"btn-dark"],attrs:{href:"#"},on:{click:function(n){return e.setMapSelector("public")}}},[e._v("Public maps")])])]),e._v(" "),t("div",{staticClass:"collapse show",staticStyle:{"max-height":"83vh","overflow-y":"scroll"},attrs:{id:"marker_feed_markers"}},[e.activeMaps.length>0?[e._l(e.activeMaps,(function(n,a){return t("li",{key:"map_id_"+n.uuid,staticClass:"media ml-3 mr-3 p-3 mb-3 card",class:[e.map&&n.uuid==e.map.uuid?"bg-white text-dark":"bg-secondary text-white feed-element"],on:{click:function(n){return e.setMap(a)}}},[t("div",{staticClass:"media-body"},[t("h5",{staticClass:"mt-0 mb-1"},[e._v("\n                  "+e._s(n.title||"Untitled map")+"\n                ")]),e._v(" "),e.map&&n.uuid==e.map.uuid?t("div",[t("p",[e._v(e._s(n.description))]),e._v(" "),t("a",{staticClass:"btn btn-primary btn-block w-100",attrs:{href:/maps/+e.map.uuid}},[e._v("Open map page")])]):e._e()])])})),e._v(" "),t("li",{staticClass:"media ml-3 mr-3 p-3 mb-3"},[t("div",{staticClass:"media-body"},[t("button",{staticClass:"btn btn-primary mt-3 mb-5 w-100",attrs:{type:"submit",form:"new_map_form"}},[e._v("\n                  Create a map\n                ")])])])]:[t("div",{staticClass:"text-center text-muted p-3"},[e._v("\n              There's no maps to show.\n            ")]),e._v(" "),t("li",{staticClass:"media ml-3 mr-3 p-3 mb-3"},[t("div",{staticClass:"media-body"},[t("button",{staticClass:"btn btn-primary mt-3 mb-5 w-100",attrs:{type:"submit",form:"new_map_form"}},[e._v("\n                  Create a map\n                ")])])])]],2)])])]),e._v(" "),t("div",{staticClass:"col-12 p-0",on:{touchstart:function(n){return e.setMenuVisibility(0)},mousedown:function(n){return e.setMenuVisibility(0)}}},[e.map?t("map-component",{staticStyle:{height:"100vh"},attrs:{map_id:e.map.uuid,map_token:null,users_can_create_markers:e.map.users_can_create_markers,map_categories:e.categories,initial_markers:null,linkOption:e.map.options.links},on:{"marker-create":e.handleMarkerCreate,"marker-delete":e.handleMarkerDelete}}):t("div",{staticClass:"row align-items-center bg-dark",staticStyle:{height:"65vh"}},[t("div",{staticClass:"col text-center"},[t("div",[e._v("Cartes.io")]),e._v(" "),t("p",{staticClass:"text-muted mb-0"},[e._v("Contacting planet Earth...")])])])],1)],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=450.js.map